name: Extended Tests
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
          cache: 'poetry'

      - name: Install dependencies
        run: poetry install --no-root

      - name: Lint with flake8
        run: poetry run flake8

      - name: Test Black Code Style compliance
        run: poetry run black . --check --diff

      - name: Look for security issues in code
        run: poetry run bandit -r qualle
        continue-on-error: true

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      - name: Install dependencies
        run: poetry install --no-root

      - name: Test Code
        run: poetry run pytest --cov=qualle --cov-report=xml

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        if: matrix.python-version == '3.8'

      - name: Look for security vulnerabilities in dependencies
        run: poetry run safety check --full-report
        continue-on-error: true
